syntax = "proto3";

package grpcpb;

//option go_package = "github.com/coschain/contentos-go/grpcpb";
option java_package = "io.contentos.android.sdk.rpc";

import "prototype/type.proto";
import "prototype/multi_id.proto";
import "prototype/transaction.proto";

service ApiService {
    rpc QueryTableContent (GetTableContentRequest) returns (TableContentResponse) {
    }

    rpc GetAccountByName (GetAccountByNameRequest) returns (AccountResponse) {
    }

    rpc GetFollowerListByName (GetFollowerListByNameRequest) returns (GetFollowerListByNameResponse) {
    }

    rpc GetFollowingListByName (GetFollowingListByNameRequest) returns (GetFollowingListByNameResponse) {
    }

    rpc GetFollowCountByName (GetFollowCountByNameRequest) returns (GetFollowCountByNameResponse) {
    }

    rpc GetBlockProducerList (GetBlockProducerListRequest) returns (GetBlockProducerListResponse) {
    }

    rpc GetPostListByCreated (GetPostListByCreatedRequest) returns (GetPostListByCreatedResponse) {
    }

    rpc GetReplyListByPostId (GetReplyListByPostIdRequest) returns (GetReplyListByPostIdResponse) {
    }

    rpc GetBlockTransactionsByNum (GetBlockTransactionsByNumRequest) returns (GetBlockTransactionsByNumResponse) {
    }

    rpc GetChainState (NonParamsRequest) returns (GetChainStateResponse) {
    }

    rpc BroadcastTrx (BroadcastTrxRequest) returns (BroadcastTrxResponse) {
    }

    rpc GetBlockList (GetBlockListRequest) returns (GetBlockListResponse) {
    }

    rpc GetSignedBlock (GetSignedBlockRequest)  returns (GetSignedBlockResponse) {
    }

    rpc GetAccountListByBalance (GetAccountListByBalanceRequest) returns (GetAccountListResponse) {
    }

    rpc GetDailyTotalTrxInfo  (GetDailyTotalTrxRequest) returns (GetDailyTotalTrxResponse) {
    }

    rpc GetTrxInfoById (GetTrxInfoByIdRequest) returns (GetTrxInfoByIdResponse) {
    }

    rpc GetTrxListByTime (GetTrxListByTimeRequest) returns (GetTrxListByTimeResponse) {
    }

    rpc GetPostListByCreateTime (GetPostListByCreateTimeRequest) returns (GetPostListByCreateTimeResponse) {
    }

    rpc GetPostListByName (GetPostListByNameRequest) returns (GetPostListByCreateTimeResponse){
    }

    rpc TrxStatByHour (TrxStatByHourRequest) returns (TrxStatByHourResponse) {
    }

    rpc GetUserTrxListByTime (GetUserTrxListByTimeRequest) returns (GetUserTrxListByTimeResponse) {
    }

    rpc GetPostInfoById (GetPostInfoByIdRequest) returns (GetPostInfoByIdResponse) {
    }

    rpc GetContractInfo (GetContractInfoRequest) returns (GetContractInfoResponse) {
    }

    rpc GetBlkIsIrreversibleByTxId (GetBlkIsIrreversibleByTxIdRequest) returns (GetBlkIsIrreversibleByTxIdResponse) {
    }

    rpc GetAccountListByCreTime (GetAccountListByCreTimeRequest) returns (GetAccountListResponse) {
    }

    rpc GetDailyStats (GetDailyStatsRequest) returns (GetDailyStatsResponse) {

    }

    rpc GetMonthlyStats (GetMonthlyStatsRequest) returns (GetMonthlyStatsResponse) {

    }

    rpc GetContractListByTime(GetContractListByTimeRequest) returns (GetContractListResponse) {
    }

    rpc GetBlockProducerListByVoteCount(GetBlockProducerListByVoteCountRequest) returns (GetBlockProducerListResponse) {
    }

    rpc GetPostListByVest(GetPostListByVestRequest) returns (GetPostListByVestResponse) {
    }

    rpc EstimateStamina(EsimateRequest) returns (EsimateResponse) {
    }

    rpc GetNodeNeighbours (NonParamsRequest) returns (GetNodeNeighboursResponse) {
    }

    rpc GetMyStakers (GetMyStakerListByNameRequest) returns (GetMyStakerListByNameResponse) {
    }

    rpc GetMyStakes (GetMyStakeListByNameRequest) returns (GetMyStakeListByNameResponse) {
    }

    rpc GetNodeRunningVersion (NonParamsRequest) returns (GetNodeRunningVersionResponse) {
    }
    rpc GetAccountListByVest (GetAccountListByVestRequest) returns (GetAccountListResponse) {
    }

    rpc GetBlockProducerByName (GetBlockProducerByNameRequest) returns (BlockProducerResponse) {
    }
    rpc GetAccountByPubKey (GetAccountByPubKeyRequest) returns (AccountResponse) {
    }
    rpc GetBlockBFTInfoByNum (GetBlockBFTInfoByNumRequest) returns (GetBlockBFTInfoByNumResponse) {
    }

    rpc GetAppTableRecord (GetAppTableRecordRequest) returns (GetAppTableRecordResponse) {
    }

    rpc GetBlockProducerVoterList(GetBlockProducerVoterListRequest) returns (GetBlockProducerVoterListResponse) {
    }

    rpc GetVestDelegationOrderList(GetVestDelegationOrderListRequest) returns (GetVestDelegationOrderListResponse) {
    }
}


message GetTableContentRequest {
    string owner = 1;
    string contract = 2;
    string table = 3;
    string field = 4;
    string begin = 5;
    uint32 count = 6;
    bool   reverse = 7;
}

message TableContentResponse {
    string table_content = 1;
}

message GetAccountByPubKeyRequest {
    string public_key = 1;
}

message GetAccountByNameRequest {
    prototype.account_name account_name = 1;
}

message GetBlockProducerByNameRequest {
    prototype.account_name bp_name = 1;
}

message GetAccountCashoutRequest{
    prototype.account_name account_name = 1;
    uint64 post_id =  2;
}

message AccountCashoutResponse {
    prototype.account_name account_name = 1;
    prototype.vest reward = 2;
}

message GetBlockCashoutRequest {
    uint64 block_height = 1;
}

message BlockCashoutResponse {
    repeated AccountCashoutResponse cashout_list = 1;
}

message GetAccountRewardByNameRequest{
    prototype.account_name account_name = 1;
}

message AccountRewardResponse {
    prototype.account_name account_name = 1;
    prototype.vest reward = 2;
}

message AccountInfo {
    prototype.account_name                  account_name    = 1;
    prototype.coin                          coin            = 2;
    prototype.vest                          vest            = 3;
    prototype.public_key_type               public_key      = 4;
    prototype.time_point_sec                created_time    = 5;
    BlockProducerResponse                   block_producer  = 6;
    uint32                                  post_count      = 7;
    uint32                                  follower_count    = 8;
    uint32                                  following_count   = 9;
    uint32                                  trx_count        = 10;
    uint32                                  vote_power       = 11;
    uint64                                  stamina_free_remain  = 12;
    uint64                                  stamina_stake_remain  = 13;
    uint64                                  stamina_max     = 14;
    prototype.vest                          stake_vest_for_me = 15;
    prototype.vest                          withdraw_remains = 16;
    prototype.vest                          has_withdrawn = 17;
    prototype.vest                          withdraw_each_time = 18;
    prototype.time_point_sec                next_withdraw_time = 19;
    prototype.time_point_sec                start_withdraw_time = 20;
    uint32                                  bp_vote_count = 21;
    uint32                                  reputation = 22;
    string                                  reputation_memo = 23;
    uint32                                  charged_ticket = 24;
    uint32                                  free_ticket = 25;
    uint32                                  freeze = 26;
    string                                  freeze_memo = 27;
    prototype.vest                          stake_vest_from_me = 28;
    prototype.account_name                  voted_block_producer = 29;
    prototype.vest                          vest_borrowed            = 30;
    prototype.vest                          vest_lent            = 31;
    prototype.vest                          vest_delivering      = 32;
    prototype.vest                          vest_owned           = 33;
    prototype.vest                          vest_self            = 34;
}

message AccountResponse {
    AccountInfo info = 1;
    ChainState  state = 2;
}

message GetFollowerListByNameRequest {
    prototype.follower_created_order    start = 1;
    prototype.follower_created_order    end   = 2;
    uint32                              limit = 3;
    prototype.follower_created_order    last_order = 4;
}

message FollowerListInfo {
    AccountResponse                     account = 1;
    prototype.follower_created_order    create_order = 2;
}

message GetFollowerListByNameResponse {
    repeated FollowerListInfo follower_list = 1;
}

message GetFollowingListByNameRequest {
    prototype.following_created_order   start = 1;
    prototype.following_created_order   end   = 2;
    uint32                              limit = 3;
    prototype.following_created_order   last_order = 4;
}

message FollowingListInfo {
    AccountResponse                    account = 1;
    prototype.following_created_order  create_order = 2;
}


message GetFollowingListByNameResponse {
    repeated FollowingListInfo following_list = 1;
}

message GetFollowCountByNameRequest {
    prototype.account_name account_name = 1;
}

message GetFollowCountByNameResponse {
    uint32      fer_cnt     = 1;
    uint32      fing_cnt    = 2;
}

message BlockProducerResponse {
    prototype.account_name             owner                           = 1;
    prototype.time_point_sec           created_time                    = 2;
    string                             url                             = 3;
    prototype.bp_vest_id               bp_vest                         = 4;
    prototype.public_key_type          signing_key                     = 5;
    uint64                             proposed_stamina_free           = 6;
    uint64                             tps_expected                    = 7;
    prototype.coin                     account_create_fee              = 8;
    uint32                             top_n_acquire_free_token        = 9;
    uint64                             ticket_flush_interval           = 10;
    prototype.coin                     per_ticket_price                = 11;
    uint64                             per_ticket_weight               = 12;
    uint64                             voter_count                     = 13;
    uint64                             gen_block_count                 = 14;
}

message GetBlockProducerListRequest {
    prototype.account_name      start = 1;
    uint32                      limit = 2;
}

message GetBlockProducerListResponse {
    repeated BlockProducerResponse block_producer_list = 1;
}

message PostResponse {
    uint64                                      post_id                 =      1 [jstype = JS_STRING];
    string                                      category                =      2;
    prototype.account_name                      parent_author           =      3;
    prototype.account_name                      author                  =      5;
    string                                      title                   =      7;
    string                                      body                    =      8;
    prototype.time_point_sec                    created                 =      11;
    prototype.time_point_sec                    last_payout             =      13;
    uint32                                      depth                   =      14;
    uint32                                      children                =      15;
    uint64                                      root_id                 =      16 [jstype = JS_STRING];
    uint64                                      parent_id               =      17 [jstype = JS_STRING];
    repeated string                             tags                    =      18;
    repeated prototype.beneficiary_route_type   beneficiaries           =      19;
    uint64                                      vote_cnt                =      20;
    string                                      weighted_vp             =      21 ;
    prototype.vest                              rewards                 =      22;
    prototype.vest                              dapp_rewards            =      23;
    uint64                                      cashout_interval        =      24;
    prototype.vest                              global_rewards          =      25 ;
    string                                      global_weighted_vp      =      26 ;
    uint32                                      ticket                  =      27;
    uint32                                      copyright               =      28;
    string                                      copyright_memo          =      29;
    uint64                                      cashout_block_num       =      30 [jstype = JS_STRING];
}

message GetPostListByCreatedRequest {
    prototype.post_created_order    start = 1;
    prototype.post_created_order    end   = 2;
    uint32                          limit = 3;
}

message GetPostListByCreatedResponse {
    repeated PostResponse post_list = 1;
}

message GetReplyListByPostIdRequest {
    prototype.reply_created_order       start = 1;
    prototype.reply_created_order       end   = 2;
    uint32                              limit = 3;
}

message GetReplyListByPostIdResponse {
    repeated PostResponse reply_list = 1;
}

message GetBlockTransactionsByNumRequest {
    uint32          block_num   = 1;
    uint32          start       = 2;
    uint32          limit       = 3;
}

message GetBlockTransactionsByNumResponse {
    repeated prototype.signed_transaction transactions = 1;
}

message GetChainStateResponse {
    ChainState state = 1;
}

message GetNodeNeighboursResponse {
    string peerlist = 1;
}

message GetNodeRunningVersionResponse {
    string nodeVersion = 1;
}

//message GetStatResponse {
//    ChainState state = 1;
//    repeated int32 daily_trx_counts = 2;
//}

message BroadcastTrxRequest {
    prototype.signed_transaction transaction = 1;
    bool only_deliver = 2;
    bool finality = 3;
}

message BroadcastTrxResponse {
    prototype.transaction_receipt_with_info    invoice = 1;
    uint32                          status  = 2;
    string                          msg     = 3;
    bool                            finality = 4;
}

message NonParamsRequest {
}

message CallResponse {
    string      result          = 1;
    string      execute_err     = 2;
    string      estimate_gas    = 3;
}

message ChainState {
    uint64 last_irreversible_block_number = 1;
    uint64 last_irreversible_block_time   = 2;
    prototype.dynamic_properties            dgpo            = 3;
}

message GetBlockListRequest {
    uint64     start            = 1;
    uint64     end              = 2;
    uint32     limit            = 3;
}


message BlockInfo {
    prototype.time_point_sec     timestamp  = 1;
    uint64                       block_height = 2 [jstype = JS_STRING];
    uint32                       trx_count   = 3;
    prototype.account_name       block_producer   = 4;
    prototype.sha256             block_id    = 5;
    prototype.sha256             pre_id      = 6;
    uint32                       block_size  = 7;
}

message GetBlockListResponse {
    repeated    BlockInfo   blocks = 1;
}

message GetSignedBlockRequest {
    uint64    start        = 1;
}

message GetSignedBlockResponse {
    prototype.signed_block  block = 1;
}


message GetAccountListByBalanceRequest {
    prototype.coin   start     = 1;
    prototype.coin   end       = 2;
    AccountInfo  last_account = 3;
    uint32           limit     = 4;
}

message GetAccountListResponse {
    repeated AccountResponse list = 1;
}


message DailyTotalTrx {
    prototype.time_point_sec     date               = 1;
    uint64     count              = 2;
}

message GetDailyTotalTrxRequest {
    prototype.time_point_sec     start              = 1;
    prototype.time_point_sec     end                = 2;
    DailyTotalTrx                last_info          = 3;
    uint32                       limit              = 4;
}

message GetDailyTotalTrxResponse {
    repeated  DailyTotalTrx   list   = 1;
}

message StatByHour {
    uint32     hour               = 1;
    uint32     count              = 2;
}

message TrxStatByHourRequest {
    uint32 hours = 1;
}

message TrxStatByHourResponse {
    repeated StatByHour stat = 1;
}

message TrxInfo {
    prototype.sha256                trx_id     =1;
    uint64                          block_height =  2;
    prototype.transaction_wrapper   trx_wrap    = 3;
    prototype.time_point_sec        block_time  = 4;
    prototype.sha256                block_id    = 5;
    bool                            blk_is_irreversible = 6;
}

message GetTrxInfoByIdRequest {
    prototype.sha256      trx_id    = 1;
}

message GetTrxInfoByIdResponse {
    TrxInfo             info        = 1;
}


message GetTrxListByTimeRequest {
    prototype.time_point_sec     start     = 1;
    prototype.time_point_sec     end       = 2;
    uint32                       limit    = 3;
    TrxInfo                  last_info   = 4;
}

message GetTrxListByTimeResponse {
    repeated        TrxInfo     list  = 1;
}

message GetPostListByCreateTimeRequest {
    prototype.time_point_sec     start      = 1;
    prototype.time_point_sec     end        = 2;
    PostResponse                 last_post  = 3;
    uint32                        limit     = 4;
}

message GetPostListByCreateTimeResponse {
    repeated PostResponse posted_list = 1;
}

message GetPostListByNameRequest {
    prototype.user_post_create_order  start  = 1;
    prototype.user_post_create_order  end    = 2;
    PostResponse  last_post = 3;
    uint32                         limit     = 4;
}


message GetUserTrxListByTimeRequest {
    prototype.account_name     name    = 1;
    prototype.time_point_sec   start   = 2;
    prototype.time_point_sec   end     = 3;
    TrxInfo                    last_trx = 4;
    uint32                     limit     = 5;
}

message GetUserTrxListByTimeResponse {
    repeated        TrxInfo     trx_list  = 1;
}

message VoterOfPost {
    prototype.account_name     account_name    = 1;
    string                     weighted_vp     = 2 ;

}

message GetPostInfoByIdRequest {
    uint64     post_id   =      1 [jstype = JS_STRING];
    uint32     voter_list_limit     =   2;
    uint32     reply_list_limit     = 3;
}

message GetPostInfoByIdResponse {
    PostResponse    post_info        = 1;
    repeated        VoterOfPost voter_list = 2;
    repeated        PostResponse  reply_list = 3;
}

message GetContractInfoRequest {
    prototype.account_name     owner    = 1;
    string     contract_name            = 2;
    bool fetchAbi                       = 3;
    bool fetchCode                      = 4;
}

message GetContractInfoResponse {
    bool exist    = 1;
    string abi    = 2;
    bytes code    = 3;
    string url    = 4;
    string describe = 5;
}

message GetBlkIsIrreversibleByTxIdRequest {
    prototype.sha256       trx_id  = 1;
}

message GetBlkIsIrreversibleByTxIdResponse {
    bool       result   = 1;
}

message GetAccountListByCreTimeRequest {
    prototype.time_point_sec   start     = 1;
    prototype.time_point_sec   end       = 2;
    AccountInfo  last_account = 3;
    uint32           limit     = 4;
}

message DailyStat {
    uint64 date = 1;
    string dapp = 2;
    uint32 dau = 3;
    uint32 dnu = 4;
    uint32 trxs = 5;
    uint64 amount = 6 [jstype = JS_STRING];
    uint32 total_user_count = 7;
}

message GetDailyStatsRequest {
    uint32 days = 1;
    string dapp = 2;
}

message GetDailyStatsResponse {
    repeated DailyStat stat = 1;
}

message MonthlyStat {
    uint64 date = 1;
    string dapp = 2;
    uint32 mau = 3;
}

message GetMonthlyStatsRequest {
    uint32 months = 1;
    string dapp = 2;
}

message GetMonthlyStatsResponse {
    repeated MonthlyStat stat = 1;
}

message ContractInfo {
    prototype.account_name    owner = 1;
    prototype.account_name    name  = 2;
    prototype.time_point_sec  create_time = 3;
    prototype.coin            balance = 4;
    uint32                    apply_count = 5;
    bool                      upgradeable = 6;

}

message GetContractListByTimeRequest {
    prototype.time_point_sec  start = 1;
    prototype.time_point_sec  end   = 2;
    ContractInfo     last_contract = 3;
    uint32           limit     = 4;
}

message GetContractListResponse {
    repeated ContractInfo   contract_list = 1;
}

message GetBlockProducerListByVoteCountRequest {
    prototype.vest   start   = 1;
    prototype.vest   end     = 2;
    BlockProducerResponse  last_block_producer = 3;
    uint32           limit     = 4;
}


message GetPostListByVestRequest {
    prototype.vest   start   = 1;
    prototype.vest   end     = 2;
    PostResponse     last_post = 3;
    uint32           limit     = 4;
}

message GetPostListByVestResponse {
    repeated PostResponse post_list = 1;
}

message EsimateRequest {
    prototype.signed_transaction transaction = 1;
}

message EsimateResponse {
    prototype.transaction_receipt_with_info    invoice = 1;
}

message StakeInfo {
    prototype.account_name account = 1;
    prototype.vest stake_amount = 2;
    uint64 stake_block_num = 3;
}

message GetMyStakerListByNameRequest {
    prototype.stake_record_reverse    start = 1;
    prototype.stake_record_reverse    end   = 2;
    uint32                            limit = 3;
}

message GetMyStakerListByNameResponse {
    repeated StakeInfo my_staker_list = 1;
}

message GetMyStakeListByNameRequest {
    prototype.stake_record    start = 1;
    prototype.stake_record    end   = 2;
    uint32                    limit = 3;
}

message GetMyStakeListByNameResponse {
    repeated StakeInfo my_stake_list = 1;

}

message GetAccountListByVestRequest {
    prototype.vest   start     = 1;
    prototype.vest   end       = 2;
    AccountInfo  last_account = 3;
    uint32           limit     = 4;
}

message GetBlockBFTInfoByNumRequest {
    uint64      block_num = 1 [jstype = JS_STRING];
}

message BFTVoteInfo {
    string   pub_key = 1;
    bytes    signature = 2;
}

message GetBlockBFTInfoByNumResponse {
    string   committer_pub_key = 1;
    bytes    signature = 2;
    repeated BFTVoteInfo  vote = 3;
}

message GetAppTableRecordRequest {
    string  table_name = 1;
    string  key = 2;
}

message GetAppTableRecordResponse {
    bool    success = 1;
    string  error_msg = 2;
    string  record = 3;
}

message GetBlockProducerVoterListRequest {
    prototype.account_name       block_producer   = 1;
    uint32 limit = 2;
    prototype.account_name last_voter = 3;
}

message BlockProducerVoterResponse {
    prototype.account_name account_name = 1;
    prototype.vest vest = 2;
}

message GetBlockProducerVoterListResponse {
    repeated BlockProducerVoterResponse voter = 1;
}

message VestDelegationOrder {
    uint64 id = 1;
    prototype.account_name from_account = 2;
    prototype.account_name to_account = 3;
    prototype.vest amount = 4;
    uint64 created_block = 5;
    uint64 maturity_block = 6;
    uint64 delivery_block = 7;
    bool delivering = 8;
}

message GetVestDelegationOrderListRequest {
    prototype.account_name account = 1;
    bool is_from = 2;
    uint32 limit = 3;
    uint64 last_order_id = 4;
}

message GetVestDelegationOrderListResponse {
    repeated VestDelegationOrder orders = 1;
}