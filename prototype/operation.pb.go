// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: prototype/operation.proto

package prototype

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AccountCreateOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee            *Coin          `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	Creator        *AccountName   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	NewAccountName *AccountName   `protobuf:"bytes,3,opt,name=new_account_name,json=newAccountName,proto3" json:"new_account_name,omitempty"`
	PubKey         *PublicKeyType `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	JsonMetadata   string         `protobuf:"bytes,5,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
}

func (x *AccountCreateOperation) Reset() {
	*x = AccountCreateOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCreateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCreateOperation) ProtoMessage() {}

func (x *AccountCreateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCreateOperation.ProtoReflect.Descriptor instead.
func (*AccountCreateOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{0}
}

func (x *AccountCreateOperation) GetFee() *Coin {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *AccountCreateOperation) GetCreator() *AccountName {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *AccountCreateOperation) GetNewAccountName() *AccountName {
	if x != nil {
		return x.NewAccountName
	}
	return nil
}

func (x *AccountCreateOperation) GetPubKey() *PublicKeyType {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *AccountCreateOperation) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

type AccountUpdateOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  *AccountName   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	PubKey *PublicKeyType `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *AccountUpdateOperation) Reset() {
	*x = AccountUpdateOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateOperation) ProtoMessage() {}

func (x *AccountUpdateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateOperation.ProtoReflect.Descriptor instead.
func (*AccountUpdateOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{1}
}

func (x *AccountUpdateOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *AccountUpdateOperation) GetPubKey() *PublicKeyType {
	if x != nil {
		return x.PubKey
	}
	return nil
}

type TransferOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   *AccountName `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     *AccountName `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount *Coin        `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Memo   string       `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *TransferOperation) Reset() {
	*x = TransferOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOperation) ProtoMessage() {}

func (x *TransferOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOperation.ProtoReflect.Descriptor instead.
func (*TransferOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{2}
}

func (x *TransferOperation) GetFrom() *AccountName {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferOperation) GetTo() *AccountName {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransferOperation) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type TransferToVestOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   *AccountName `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     *AccountName `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount *Coin        `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Memo   string       `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *TransferToVestOperation) Reset() {
	*x = TransferToVestOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferToVestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToVestOperation) ProtoMessage() {}

func (x *TransferToVestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToVestOperation.ProtoReflect.Descriptor instead.
func (*TransferToVestOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{3}
}

func (x *TransferToVestOperation) GetFrom() *AccountName {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferToVestOperation) GetTo() *AccountName {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferToVestOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransferToVestOperation) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type VoteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter *AccountName `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	Idx   uint64       `protobuf:"varint,2,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (x *VoteOperation) Reset() {
	*x = VoteOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteOperation) ProtoMessage() {}

func (x *VoteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteOperation.ProtoReflect.Descriptor instead.
func (*VoteOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{4}
}

func (x *VoteOperation) GetVoter() *AccountName {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *VoteOperation) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type BpRegisterOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner           *AccountName     `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Url             string           `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Desc            string           `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	BlockSigningKey *PublicKeyType   `protobuf:"bytes,4,opt,name=block_signing_key,json=blockSigningKey,proto3" json:"block_signing_key,omitempty"`
	Props           *ChainProperties `protobuf:"bytes,5,opt,name=props,proto3" json:"props,omitempty"`
}

func (x *BpRegisterOperation) Reset() {
	*x = BpRegisterOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BpRegisterOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpRegisterOperation) ProtoMessage() {}

func (x *BpRegisterOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpRegisterOperation.ProtoReflect.Descriptor instead.
func (*BpRegisterOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{5}
}

func (x *BpRegisterOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *BpRegisterOperation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BpRegisterOperation) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BpRegisterOperation) GetBlockSigningKey() *PublicKeyType {
	if x != nil {
		return x.BlockSigningKey
	}
	return nil
}

func (x *BpRegisterOperation) GetProps() *ChainProperties {
	if x != nil {
		return x.Props
	}
	return nil
}

type BpUpdateOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *AccountName     `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Props *ChainProperties `protobuf:"bytes,2,opt,name=props,proto3" json:"props,omitempty"`
}

func (x *BpUpdateOperation) Reset() {
	*x = BpUpdateOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BpUpdateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpUpdateOperation) ProtoMessage() {}

func (x *BpUpdateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpUpdateOperation.ProtoReflect.Descriptor instead.
func (*BpUpdateOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{6}
}

func (x *BpUpdateOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *BpUpdateOperation) GetProps() *ChainProperties {
	if x != nil {
		return x.Props
	}
	return nil
}

type BpEnableOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  *AccountName `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Cancel bool         `protobuf:"varint,2,opt,name=cancel,proto3" json:"cancel,omitempty"`
}

func (x *BpEnableOperation) Reset() {
	*x = BpEnableOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BpEnableOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpEnableOperation) ProtoMessage() {}

func (x *BpEnableOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpEnableOperation.ProtoReflect.Descriptor instead.
func (*BpEnableOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{7}
}

func (x *BpEnableOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *BpEnableOperation) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

type BpVoteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter         *AccountName `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	BlockProducer *AccountName `protobuf:"bytes,2,opt,name=block_producer,json=blockProducer,proto3" json:"block_producer,omitempty"`
	Cancel        bool         `protobuf:"varint,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
}

func (x *BpVoteOperation) Reset() {
	*x = BpVoteOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BpVoteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpVoteOperation) ProtoMessage() {}

func (x *BpVoteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpVoteOperation.ProtoReflect.Descriptor instead.
func (*BpVoteOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{8}
}

func (x *BpVoteOperation) GetVoter() *AccountName {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *BpVoteOperation) GetBlockProducer() *AccountName {
	if x != nil {
		return x.BlockProducer
	}
	return nil
}

func (x *BpVoteOperation) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

type FollowOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  *AccountName `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	FAccount *AccountName `protobuf:"bytes,2,opt,name=f_account,json=fAccount,proto3" json:"f_account,omitempty"`
	Cancel   bool         `protobuf:"varint,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
}

func (x *FollowOperation) Reset() {
	*x = FollowOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowOperation) ProtoMessage() {}

func (x *FollowOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowOperation.ProtoReflect.Descriptor instead.
func (*FollowOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{9}
}

func (x *FollowOperation) GetAccount() *AccountName {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *FollowOperation) GetFAccount() *AccountName {
	if x != nil {
		return x.FAccount
	}
	return nil
}

func (x *FollowOperation) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

type ContractDeployOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner       *AccountName `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Contract    string       `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Abi         []byte       `protobuf:"bytes,3,opt,name=abi,proto3" json:"abi,omitempty"`
	Code        []byte       `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Upgradeable bool         `protobuf:"varint,5,opt,name=upgradeable,proto3" json:"upgradeable,omitempty"`
	Url         string       `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Describe    string       `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *ContractDeployOperation) Reset() {
	*x = ContractDeployOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractDeployOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractDeployOperation) ProtoMessage() {}

func (x *ContractDeployOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractDeployOperation.ProtoReflect.Descriptor instead.
func (*ContractDeployOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{10}
}

func (x *ContractDeployOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ContractDeployOperation) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ContractDeployOperation) GetAbi() []byte {
	if x != nil {
		return x.Abi
	}
	return nil
}

func (x *ContractDeployOperation) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ContractDeployOperation) GetUpgradeable() bool {
	if x != nil {
		return x.Upgradeable
	}
	return false
}

func (x *ContractDeployOperation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ContractDeployOperation) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type ContractApplyOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *AccountName `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`     // who apply this op
	Owner    *AccountName `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`       // who owner this contract
	Contract string       `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"` // contract name
	Method   string       `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`     // call which method
	Params   string       `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`     // param list, encoded as a single json string. e.g. '[]' or '["hello", 3, true]'
	Amount   *Coin        `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`     // cos-coin send to the contract
}

func (x *ContractApplyOperation) Reset() {
	*x = ContractApplyOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractApplyOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractApplyOperation) ProtoMessage() {}

func (x *ContractApplyOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractApplyOperation.ProtoReflect.Descriptor instead.
func (*ContractApplyOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{11}
}

func (x *ContractApplyOperation) GetCaller() *AccountName {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *ContractApplyOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ContractApplyOperation) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ContractApplyOperation) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ContractApplyOperation) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ContractApplyOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type InternalContractApplyOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromCaller   *AccountName `protobuf:"bytes,1,opt,name=from_caller,json=fromCaller,proto3" json:"from_caller,omitempty"`       // caller of the calling contract
	FromOwner    *AccountName `protobuf:"bytes,2,opt,name=from_owner,json=fromOwner,proto3" json:"from_owner,omitempty"`          // owner of the calling contract
	FromContract string       `protobuf:"bytes,3,opt,name=from_contract,json=fromContract,proto3" json:"from_contract,omitempty"` // name of the calling contract
	FromMethod   string       `protobuf:"bytes,4,opt,name=from_method,json=fromMethod,proto3" json:"from_method,omitempty"`       // method of the calling contract
	ToOwner      *AccountName `protobuf:"bytes,5,opt,name=to_owner,json=toOwner,proto3" json:"to_owner,omitempty"`                // owner of the called contract
	ToContract   string       `protobuf:"bytes,6,opt,name=to_contract,json=toContract,proto3" json:"to_contract,omitempty"`       // name of the called contract
	ToMethod     string       `protobuf:"bytes,7,opt,name=to_method,json=toMethod,proto3" json:"to_method,omitempty"`             // method of the called contract
	Params       []byte       `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`                                 // parameters encoded by internal serialization protocol between contract VM & host
	Amount       *Coin        `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`                                 // amount of coins to transfer from caller contract to called contract
}

func (x *InternalContractApplyOperation) Reset() {
	*x = InternalContractApplyOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalContractApplyOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalContractApplyOperation) ProtoMessage() {}

func (x *InternalContractApplyOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalContractApplyOperation.ProtoReflect.Descriptor instead.
func (*InternalContractApplyOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{12}
}

func (x *InternalContractApplyOperation) GetFromCaller() *AccountName {
	if x != nil {
		return x.FromCaller
	}
	return nil
}

func (x *InternalContractApplyOperation) GetFromOwner() *AccountName {
	if x != nil {
		return x.FromOwner
	}
	return nil
}

func (x *InternalContractApplyOperation) GetFromContract() string {
	if x != nil {
		return x.FromContract
	}
	return ""
}

func (x *InternalContractApplyOperation) GetFromMethod() string {
	if x != nil {
		return x.FromMethod
	}
	return ""
}

func (x *InternalContractApplyOperation) GetToOwner() *AccountName {
	if x != nil {
		return x.ToOwner
	}
	return nil
}

func (x *InternalContractApplyOperation) GetToContract() string {
	if x != nil {
		return x.ToContract
	}
	return ""
}

func (x *InternalContractApplyOperation) GetToMethod() string {
	if x != nil {
		return x.ToMethod
	}
	return ""
}

func (x *InternalContractApplyOperation) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *InternalContractApplyOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type PostOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          uint64                  `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Owner         *AccountName            `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Title         string                  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Tags          []string                `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Beneficiaries []*BeneficiaryRouteType `protobuf:"bytes,6,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
}

func (x *PostOperation) Reset() {
	*x = PostOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOperation) ProtoMessage() {}

func (x *PostOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOperation.ProtoReflect.Descriptor instead.
func (*PostOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{13}
}

func (x *PostOperation) GetUuid() uint64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

func (x *PostOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *PostOperation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostOperation) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostOperation) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PostOperation) GetBeneficiaries() []*BeneficiaryRouteType {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

type ReplyOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          uint64                  `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Owner         *AccountName            `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Content       string                  `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ParentUuid    uint64                  `protobuf:"varint,4,opt,name=parent_uuid,json=parentUuid,proto3" json:"parent_uuid,omitempty"`
	Beneficiaries []*BeneficiaryRouteType `protobuf:"bytes,6,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
}

func (x *ReplyOperation) Reset() {
	*x = ReplyOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyOperation) ProtoMessage() {}

func (x *ReplyOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyOperation.ProtoReflect.Descriptor instead.
func (*ReplyOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{14}
}

func (x *ReplyOperation) GetUuid() uint64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

func (x *ReplyOperation) GetOwner() *AccountName {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ReplyOperation) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyOperation) GetParentUuid() uint64 {
	if x != nil {
		return x.ParentUuid
	}
	return 0
}

func (x *ReplyOperation) GetBeneficiaries() []*BeneficiaryRouteType {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

type ConvertVestOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   *AccountName `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Amount *Vest        `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ConvertVestOperation) Reset() {
	*x = ConvertVestOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConvertVestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertVestOperation) ProtoMessage() {}

func (x *ConvertVestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertVestOperation.ProtoReflect.Descriptor instead.
func (*ConvertVestOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{15}
}

func (x *ConvertVestOperation) GetFrom() *AccountName {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ConvertVestOperation) GetAmount() *Vest {
	if x != nil {
		return x.Amount
	}
	return nil
}

type StakeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   *AccountName `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     *AccountName `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount *Coin        `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *StakeOperation) Reset() {
	*x = StakeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeOperation) ProtoMessage() {}

func (x *StakeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeOperation.ProtoReflect.Descriptor instead.
func (*StakeOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{16}
}

func (x *StakeOperation) GetFrom() *AccountName {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *StakeOperation) GetTo() *AccountName {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *StakeOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type UnStakeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creditor *AccountName `protobuf:"bytes,1,opt,name=creditor,proto3" json:"creditor,omitempty"`
	Debtor   *AccountName `protobuf:"bytes,2,opt,name=debtor,proto3" json:"debtor,omitempty"`
	Amount   *Coin        `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *UnStakeOperation) Reset() {
	*x = UnStakeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnStakeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnStakeOperation) ProtoMessage() {}

func (x *UnStakeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnStakeOperation.ProtoReflect.Descriptor instead.
func (*UnStakeOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{17}
}

func (x *UnStakeOperation) GetCreditor() *AccountName {
	if x != nil {
		return x.Creditor
	}
	return nil
}

func (x *UnStakeOperation) GetDebtor() *AccountName {
	if x != nil {
		return x.Debtor
	}
	return nil
}

func (x *UnStakeOperation) GetAmount() *Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type AcquireTicketOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountName `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Count   uint64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AcquireTicketOperation) Reset() {
	*x = AcquireTicketOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireTicketOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireTicketOperation) ProtoMessage() {}

func (x *AcquireTicketOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireTicketOperation.ProtoReflect.Descriptor instead.
func (*AcquireTicketOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{18}
}

func (x *AcquireTicketOperation) GetAccount() *AccountName {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AcquireTicketOperation) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type VoteByTicketOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountName `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Idx     uint64       `protobuf:"varint,2,opt,name=idx,proto3" json:"idx,omitempty"`
	Count   uint64       `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *VoteByTicketOperation) Reset() {
	*x = VoteByTicketOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteByTicketOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteByTicketOperation) ProtoMessage() {}

func (x *VoteByTicketOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteByTicketOperation.ProtoReflect.Descriptor instead.
func (*VoteByTicketOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{19}
}

func (x *VoteByTicketOperation) GetAccount() *AccountName {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *VoteByTicketOperation) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *VoteByTicketOperation) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DelegateVestOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *AccountName `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *AccountName `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount     *Vest        `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Expiration uint64       `protobuf:"varint,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *DelegateVestOperation) Reset() {
	*x = DelegateVestOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateVestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateVestOperation) ProtoMessage() {}

func (x *DelegateVestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateVestOperation.ProtoReflect.Descriptor instead.
func (*DelegateVestOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{20}
}

func (x *DelegateVestOperation) GetFrom() *AccountName {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DelegateVestOperation) GetTo() *AccountName {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DelegateVestOperation) GetAmount() *Vest {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *DelegateVestOperation) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type UnDelegateVestOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountName `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	OrderId uint64       `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *UnDelegateVestOperation) Reset() {
	*x = UnDelegateVestOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prototype_operation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnDelegateVestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnDelegateVestOperation) ProtoMessage() {}

func (x *UnDelegateVestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_prototype_operation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnDelegateVestOperation.ProtoReflect.Descriptor instead.
func (*UnDelegateVestOperation) Descriptor() ([]byte, []int) {
	return file_prototype_operation_proto_rawDescGZIP(), []int{21}
}

func (x *UnDelegateVestOperation) GetAccount() *AccountName {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *UnDelegateVestOperation) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

var File_prototype_operation_proto protoreflect.FileDescriptor

var file_prototype_operation_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a,
	0x18, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x18,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0xa7, 0x01, 0x0a,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x27, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x55, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x03, 0x69, 0x64, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x03, 0x69, 0x64, 0x78, 0x22,
	0xe7, 0x01, 0x0a, 0x15, 0x62, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x46,
	0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x77, 0x0a, 0x13, 0x62, 0x70, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x31, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x70, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x62, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x22, 0x9a, 0x01, 0x0a, 0x11, 0x62, 0x70, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05,
	0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x93, 0x01,
	0x0a, 0x10, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x66, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x08, 0x66, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x62, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x61, 0x62, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x03, 0x0a, 0x21, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x74,
	0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0xe0, 0x01, 0x0a,
	0x0f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x6e, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x90, 0x01, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x27, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x2f,
	0x0a, 0x06, 0x64, 0x65, 0x62, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x64, 0x65, 0x62, 0x74, 0x6f, 0x72, 0x12,
	0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x18, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x79, 0x0a,
	0x18, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x03,
	0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x27, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x1a, 0x75, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x50, 0x0a, 0x22, 0x69, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x6f, 0x73, 0x2e,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x74, 0x79, 0x70, 0x65, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x6f, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prototype_operation_proto_rawDescOnce sync.Once
	file_prototype_operation_proto_rawDescData = file_prototype_operation_proto_rawDesc
)

func file_prototype_operation_proto_rawDescGZIP() []byte {
	file_prototype_operation_proto_rawDescOnce.Do(func() {
		file_prototype_operation_proto_rawDescData = protoimpl.X.CompressGZIP(file_prototype_operation_proto_rawDescData)
	})
	return file_prototype_operation_proto_rawDescData
}

var file_prototype_operation_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_prototype_operation_proto_goTypes = []interface{}{
	(*AccountCreateOperation)(nil),         // 0: prototype.account_create_operation
	(*AccountUpdateOperation)(nil),         // 1: prototype.account_update_operation
	(*TransferOperation)(nil),              // 2: prototype.transfer_operation
	(*TransferToVestOperation)(nil),        // 3: prototype.transfer_to_vest_operation
	(*VoteOperation)(nil),                  // 4: prototype.vote_operation
	(*BpRegisterOperation)(nil),            // 5: prototype.bp_register_operation
	(*BpUpdateOperation)(nil),              // 6: prototype.bp_update_operation
	(*BpEnableOperation)(nil),              // 7: prototype.bp_enable_operation
	(*BpVoteOperation)(nil),                // 8: prototype.bp_vote_operation
	(*FollowOperation)(nil),                // 9: prototype.follow_operation
	(*ContractDeployOperation)(nil),        // 10: prototype.contract_deploy_operation
	(*ContractApplyOperation)(nil),         // 11: prototype.contract_apply_operation
	(*InternalContractApplyOperation)(nil), // 12: prototype.internal_contract_apply_operation
	(*PostOperation)(nil),                  // 13: prototype.post_operation
	(*ReplyOperation)(nil),                 // 14: prototype.reply_operation
	(*ConvertVestOperation)(nil),           // 15: prototype.convert_vest_operation
	(*StakeOperation)(nil),                 // 16: prototype.stake_operation
	(*UnStakeOperation)(nil),               // 17: prototype.un_stake_operation
	(*AcquireTicketOperation)(nil),         // 18: prototype.acquire_ticket_operation
	(*VoteByTicketOperation)(nil),          // 19: prototype.vote_by_ticket_operation
	(*DelegateVestOperation)(nil),          // 20: prototype.delegate_vest_operation
	(*UnDelegateVestOperation)(nil),        // 21: prototype.un_delegate_vest_operation
	(*Coin)(nil),                           // 22: prototype.coin
	(*AccountName)(nil),                    // 23: prototype.account_name
	(*PublicKeyType)(nil),                  // 24: prototype.public_key_type
	(*ChainProperties)(nil),                // 25: prototype.chain_properties
	(*BeneficiaryRouteType)(nil),           // 26: prototype.beneficiary_route_type
	(*Vest)(nil),                           // 27: prototype.vest
}
var file_prototype_operation_proto_depIdxs = []int32{
	22, // 0: prototype.account_create_operation.fee:type_name -> prototype.coin
	23, // 1: prototype.account_create_operation.creator:type_name -> prototype.account_name
	23, // 2: prototype.account_create_operation.new_account_name:type_name -> prototype.account_name
	24, // 3: prototype.account_create_operation.pub_key:type_name -> prototype.public_key_type
	23, // 4: prototype.account_update_operation.owner:type_name -> prototype.account_name
	24, // 5: prototype.account_update_operation.pub_key:type_name -> prototype.public_key_type
	23, // 6: prototype.transfer_operation.from:type_name -> prototype.account_name
	23, // 7: prototype.transfer_operation.to:type_name -> prototype.account_name
	22, // 8: prototype.transfer_operation.amount:type_name -> prototype.coin
	23, // 9: prototype.transfer_to_vest_operation.from:type_name -> prototype.account_name
	23, // 10: prototype.transfer_to_vest_operation.to:type_name -> prototype.account_name
	22, // 11: prototype.transfer_to_vest_operation.amount:type_name -> prototype.coin
	23, // 12: prototype.vote_operation.voter:type_name -> prototype.account_name
	23, // 13: prototype.bp_register_operation.owner:type_name -> prototype.account_name
	24, // 14: prototype.bp_register_operation.block_signing_key:type_name -> prototype.public_key_type
	25, // 15: prototype.bp_register_operation.props:type_name -> prototype.chain_properties
	23, // 16: prototype.bp_update_operation.owner:type_name -> prototype.account_name
	25, // 17: prototype.bp_update_operation.props:type_name -> prototype.chain_properties
	23, // 18: prototype.bp_enable_operation.owner:type_name -> prototype.account_name
	23, // 19: prototype.bp_vote_operation.voter:type_name -> prototype.account_name
	23, // 20: prototype.bp_vote_operation.block_producer:type_name -> prototype.account_name
	23, // 21: prototype.follow_operation.account:type_name -> prototype.account_name
	23, // 22: prototype.follow_operation.f_account:type_name -> prototype.account_name
	23, // 23: prototype.contract_deploy_operation.owner:type_name -> prototype.account_name
	23, // 24: prototype.contract_apply_operation.caller:type_name -> prototype.account_name
	23, // 25: prototype.contract_apply_operation.owner:type_name -> prototype.account_name
	22, // 26: prototype.contract_apply_operation.amount:type_name -> prototype.coin
	23, // 27: prototype.internal_contract_apply_operation.from_caller:type_name -> prototype.account_name
	23, // 28: prototype.internal_contract_apply_operation.from_owner:type_name -> prototype.account_name
	23, // 29: prototype.internal_contract_apply_operation.to_owner:type_name -> prototype.account_name
	22, // 30: prototype.internal_contract_apply_operation.amount:type_name -> prototype.coin
	23, // 31: prototype.post_operation.owner:type_name -> prototype.account_name
	26, // 32: prototype.post_operation.beneficiaries:type_name -> prototype.beneficiary_route_type
	23, // 33: prototype.reply_operation.owner:type_name -> prototype.account_name
	26, // 34: prototype.reply_operation.beneficiaries:type_name -> prototype.beneficiary_route_type
	23, // 35: prototype.convert_vest_operation.from:type_name -> prototype.account_name
	27, // 36: prototype.convert_vest_operation.amount:type_name -> prototype.vest
	23, // 37: prototype.stake_operation.from:type_name -> prototype.account_name
	23, // 38: prototype.stake_operation.to:type_name -> prototype.account_name
	22, // 39: prototype.stake_operation.amount:type_name -> prototype.coin
	23, // 40: prototype.un_stake_operation.creditor:type_name -> prototype.account_name
	23, // 41: prototype.un_stake_operation.debtor:type_name -> prototype.account_name
	22, // 42: prototype.un_stake_operation.amount:type_name -> prototype.coin
	23, // 43: prototype.acquire_ticket_operation.account:type_name -> prototype.account_name
	23, // 44: prototype.vote_by_ticket_operation.account:type_name -> prototype.account_name
	23, // 45: prototype.delegate_vest_operation.from:type_name -> prototype.account_name
	23, // 46: prototype.delegate_vest_operation.to:type_name -> prototype.account_name
	27, // 47: prototype.delegate_vest_operation.amount:type_name -> prototype.vest
	23, // 48: prototype.un_delegate_vest_operation.account:type_name -> prototype.account_name
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_prototype_operation_proto_init() }
func file_prototype_operation_proto_init() {
	if File_prototype_operation_proto != nil {
		return
	}
	file_prototype_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_prototype_operation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCreateOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferToVestOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BpRegisterOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BpUpdateOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BpEnableOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BpVoteOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractDeployOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractApplyOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalContractApplyOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConvertVestOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnStakeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireTicketOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteByTicketOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateVestOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prototype_operation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnDelegateVestOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prototype_operation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prototype_operation_proto_goTypes,
		DependencyIndexes: file_prototype_operation_proto_depIdxs,
		MessageInfos:      file_prototype_operation_proto_msgTypes,
	}.Build()
	File_prototype_operation_proto = out.File
	file_prototype_operation_proto_rawDesc = nil
	file_prototype_operation_proto_goTypes = nil
	file_prototype_operation_proto_depIdxs = nil
}
